// Generated by CoffeeScript 1.12.6
var connect, disconnect, mainLoop, nick, nicked, parse, sendText, validateSendText;

nicked = false;

nick = null;

connect = function(again) {
  if (again == null) {
    again = false;
  }
  if (again) {
    nick = window.prompt("Already used! Use another nickname:", "default_user1").replace("&", "&amp;").replace("<", "&lt;").replace("\"", "&quot;").replace("'", "&apos;");
  } else {
    nick = window.prompt("Set your nickname:", "default_user").replace("&", "&amp;").replace("<", "&lt;").replace("\"", "&quot;").replace("'", "&apos;");
  }
  return $.ajax("../connect", {
    type: "POST",
    data: JSON.stringify({
      nick: nick
    }),
    success: function(data, status, req) {
      if (!data["continue"]) {
        return connect(true);
      }
    },
    contentType: 'application/json'
  });
};

sendText = function() {
  var data, inputBox;
  if (!nicked) {
    return false;
  }
  inputBox = document.getElementById("textArea");
  data = inputBox.value;
  if (data === "") {
    return false;
  }
  inputBox.value = "";
  $.ajax("../sendchat", {
    type: "POST",
    data: JSON.stringify({
      text: data,
      nick: nick
    }),
    success: null,
    contentType: 'application/json'
  });
  return true;
};

validateSendText = function(event) {
  if (event.keyCode === 13) {
    return sendText();
  }
};

parse = function(logs) {
  var d, i, len, results;
  results = [];
  for (i = 0, len = logs.length; i < len; i++) {
    d = logs[i];
    if ((d != null) && d !== "") {
      results.push(document.getElementById("logs").innerHTML += "</br>" + d);
    } else {
      results.push(void 0);
    }
  }
  return results;
};

mainLoop = function() {
  return $.ajax("../getchat", {
    type: "POST",
    data: JSON.stringify({
      nick: nick
    }),
    success: function(data, status, req) {
      if (data["continue"] != null) {
        if (data.logs != null) {
          parse(data.logs);
          return window.setTimeout(mainLoop, data.next * 1000);
        } else {
          return window.setTimeout(mainLoop, 5000);
        }
      } else {
        return disconnect();
      }
    },
    contentType: 'application/json'
  });
};

disconnect = function() {
  document.getElementById("inputs").parentNode.removeChild(document.getElementById("inputs"));
  $.ajax("../disconnect", {
    type: "POST",
    data: JSON.stringify({
      nick: nick
    }),
    success: null,
    contentType: 'application/json'
  });
  return document.getElementById("logs").innerHTML += "</br>--- Disconnected.";
};

window.onload = function() {
  connect();
  nicked = true;
  return window.setTimeout(mainLoop, 1000);
};
